# File: .azure/pipelines/rm.yml
# Pipeline for the release management to verify the changeset is good enuf,
# then package and publish above store.

trigger:
- main

variables:
 vmImageName: ubuntu-latest
 project: '**/*.App.csproj'

# HACK: Due to product limitation/issue, in a multi-staged environments, you have to link the variables groups via Classic pipeline.
#       Limitation/issue: https://github.com/MicrosoftDocs/azure-devops-docs/issues/8755
#       Workaround: https://docs.microsoft.com/en-us/azure/devops/pipelines/library/variable-groups?view=azure-devops&tabs=classic#use-a-variable-group
stages:
- stage: Build
  displayName: Build

  jobs:
  - job: Build
    pool: 
      vmImage: $(vmImageName)

    steps:
    - template: /.azure/pipelines/build/build-rm.yml
      parameters:
        project: $(project)

- stage: Dev_Deployment
  displayName: 'Deploy to Dev'
  
  # HACK: Refer the above workaround.
  variables:
  - group: azure-dev

  jobs:
  - template: /.azure/pipelines/deploy/deploy-rm.yml
    parameters:
      vmImage: $(vmImageName)
      environment: DEV
      connectedService: $(connected-service-name)
      location: $(location)
      subscription: 'Nandun Development'
      appName: 'dReferenceWorkerFunctionfn01'
      resourceGroup: 'Dev-Reference-East-RG'

- stage: QA_Deployment
  displayName: 'Deploy to QA'

  # HACK: Refer the above workaround.
  variables:
  - group: azure-qa 
  
  condition: succeeded()
  dependsOn: Dev_Deployment
  
  jobs:
  - template: /.azure/pipelines/deploy/deploy-rm.yml
    parameters:
      vmImage: $(vmImageName)
      environment: QA
      connectedService: $(connected-service-name)
      location: $(location)
      subscription: 'Nandun Performance Testing'
      appName: 'qReferenceWorkerFunctionfn01'
      resourceGroup: 'QA-Reference-East-RG'

- stage: Prod_Deployment
  displayName: 'Deploy to Prod'

  # HACK: Refer the above workaround.
  variables:
  - group: azure-prod
  
  condition: succeeded()
  dependsOn: QA_Deployment
  
  jobs:
  - template: /.azure/pipelines/deploy/deploy-rm.yml
    parameters:
      vmImage: $(vmImageName)
      environment: PROD
      connectedService: $(connected-service-name)
      location: $(location)
      subscription: 'Nandun Production'
      appName: 'pReferenceWorkerFunctionfn01'
      resourceGroup: 'Prod-Reference-East-RG'
